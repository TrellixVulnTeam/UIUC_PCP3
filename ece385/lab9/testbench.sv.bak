module testbench();

timeunit 10ns;	// Half clock cycle at 50 MHz
			// This is the amount of time represented by #1 
timeprecision 1ns;

// These signals are internal because the processor will be 
// instantiated as a submodule in testbench.
logic CLK;                   // input
logic RESET;					  // input
logic AES_START;				  // input
logic AES_DONE;				  // output
logic [127:0] AES_KEY;		  // input
logic [127:0] AES_MSG_ENC;	  // input
logic [127:0] AES_MSG_DEC;	  // output

AES encrypt(.CLK(CLK), .RESET(RESET), .AES_START(AES_START), .AES_DONE(AES_DONE), .AES_KEY(AES_KEY), .AES_MSG_ENC(AES_MSG_ENC), .AES_MSG_DEC(AES_MSG_DEC));


// Toggle the clock
// #1 means wait for a delay of 1 timeunit
always begin : CLOCK_GENERATION
#1 CLK = ~CLK;
end

initial begin: CLOCK_INITIALIZATION
    CLK = 1'b0;
end 

// Testing begins here
// The initial block is not synthesizable
// Everything happens sequentially inside an initial block
// as in a software program
initial begin: TEST_VECTORS
AES_KEY = 128'h000102030405060708090a0b0c0d0e0f;
AES_MSG_ENC = 128'hdaec3055df058e1c39e814ea76f6747e;

#3 RESET=1'b0;
#3 AES_START = 1'b1;




end
endmodule
