vendor_name = ModelSim
source_file = 1, D:/ECE385/Lab5/Control.sv
source_file = 1, D:/ECE385/Lab5/HexDriver.sv
source_file = 1, D:/ECE385/Lab5/reg_unit.sv
source_file = 1, D:/ECE385/Lab5/flip_flop.sv
source_file = 1, D:/ECE385/Lab5/processor.sv
source_file = 1, D:/ECE385/Lab5/nineadder.sv
source_file = 1, D:/ECE385/Lab5/sync.sv
source_file = 1, D:/ECE385/Lab5/testbench.sv
source_file = 1, D:/ECE385/Lab5/freq.sdc
source_file = 1, D:/ECE385/Lab5/db/8bitmultiplier.cbx.xml
design_name = processor
instance = comp, \AhexU[0]~output , AhexU[0]~output, processor, 1
instance = comp, \AhexU[1]~output , AhexU[1]~output, processor, 1
instance = comp, \AhexU[2]~output , AhexU[2]~output, processor, 1
instance = comp, \AhexU[3]~output , AhexU[3]~output, processor, 1
instance = comp, \AhexU[4]~output , AhexU[4]~output, processor, 1
instance = comp, \AhexU[5]~output , AhexU[5]~output, processor, 1
instance = comp, \AhexU[6]~output , AhexU[6]~output, processor, 1
instance = comp, \AhexL[0]~output , AhexL[0]~output, processor, 1
instance = comp, \AhexL[1]~output , AhexL[1]~output, processor, 1
instance = comp, \AhexL[2]~output , AhexL[2]~output, processor, 1
instance = comp, \AhexL[3]~output , AhexL[3]~output, processor, 1
instance = comp, \AhexL[4]~output , AhexL[4]~output, processor, 1
instance = comp, \AhexL[5]~output , AhexL[5]~output, processor, 1
instance = comp, \AhexL[6]~output , AhexL[6]~output, processor, 1
instance = comp, \BhexU[0]~output , BhexU[0]~output, processor, 1
instance = comp, \BhexU[1]~output , BhexU[1]~output, processor, 1
instance = comp, \BhexU[2]~output , BhexU[2]~output, processor, 1
instance = comp, \BhexU[3]~output , BhexU[3]~output, processor, 1
instance = comp, \BhexU[4]~output , BhexU[4]~output, processor, 1
instance = comp, \BhexU[5]~output , BhexU[5]~output, processor, 1
instance = comp, \BhexU[6]~output , BhexU[6]~output, processor, 1
instance = comp, \BhexL[0]~output , BhexL[0]~output, processor, 1
instance = comp, \BhexL[1]~output , BhexL[1]~output, processor, 1
instance = comp, \BhexL[2]~output , BhexL[2]~output, processor, 1
instance = comp, \BhexL[3]~output , BhexL[3]~output, processor, 1
instance = comp, \BhexL[4]~output , BhexL[4]~output, processor, 1
instance = comp, \BhexL[5]~output , BhexL[5]~output, processor, 1
instance = comp, \BhexL[6]~output , BhexL[6]~output, processor, 1
instance = comp, \X~output , X~output, processor, 1
instance = comp, \Aval[0]~output , Aval[0]~output, processor, 1
instance = comp, \Aval[1]~output , Aval[1]~output, processor, 1
instance = comp, \Aval[2]~output , Aval[2]~output, processor, 1
instance = comp, \Aval[3]~output , Aval[3]~output, processor, 1
instance = comp, \Aval[4]~output , Aval[4]~output, processor, 1
instance = comp, \Aval[5]~output , Aval[5]~output, processor, 1
instance = comp, \Aval[6]~output , Aval[6]~output, processor, 1
instance = comp, \Aval[7]~output , Aval[7]~output, processor, 1
instance = comp, \Bval[0]~output , Bval[0]~output, processor, 1
instance = comp, \Bval[1]~output , Bval[1]~output, processor, 1
instance = comp, \Bval[2]~output , Bval[2]~output, processor, 1
instance = comp, \Bval[3]~output , Bval[3]~output, processor, 1
instance = comp, \Bval[4]~output , Bval[4]~output, processor, 1
instance = comp, \Bval[5]~output , Bval[5]~output, processor, 1
instance = comp, \Bval[6]~output , Bval[6]~output, processor, 1
instance = comp, \Bval[7]~output , Bval[7]~output, processor, 1
instance = comp, \clk~input , clk~input, processor, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, processor, 1
instance = comp, \CTRL|curr_state.M~feeder , CTRL|curr_state.M~feeder, processor, 1
instance = comp, \Reset~input , Reset~input, processor, 1
instance = comp, \button_sync[2]|q~0 , button_sync[2]|q~0, processor, 1
instance = comp, \button_sync[2]|q , button_sync[2]|q, processor, 1
instance = comp, \CTRL|curr_state.M , CTRL|curr_state.M, processor, 1
instance = comp, \CTRL|curr_state.N , CTRL|curr_state.N, processor, 1
instance = comp, \CTRL|curr_state.O~feeder , CTRL|curr_state.O~feeder, processor, 1
instance = comp, \CTRL|curr_state.O , CTRL|curr_state.O, processor, 1
instance = comp, \CTRL|curr_state.P , CTRL|curr_state.P, processor, 1
instance = comp, \CTRL|curr_state.Q , CTRL|curr_state.Q, processor, 1
instance = comp, \Run~input , Run~input, processor, 1
instance = comp, \button_sync[0]|q~0 , button_sync[0]|q~0, processor, 1
instance = comp, \button_sync[0]|q , button_sync[0]|q, processor, 1
instance = comp, \CTRL|Selector17~0 , CTRL|Selector17~0, processor, 1
instance = comp, \CTRL|curr_state.R , CTRL|curr_state.R, processor, 1
instance = comp, \CTRL|Selector0~0 , CTRL|Selector0~0, processor, 1
instance = comp, \CTRL|curr_state.A , CTRL|curr_state.A, processor, 1
instance = comp, \CTRL|Selector1~0 , CTRL|Selector1~0, processor, 1
instance = comp, \CTRL|curr_state.B~feeder , CTRL|curr_state.B~feeder, processor, 1
instance = comp, \CTRL|curr_state.B , CTRL|curr_state.B, processor, 1
instance = comp, \CTRL|curr_state.C , CTRL|curr_state.C, processor, 1
instance = comp, \CTRL|curr_state.D~feeder , CTRL|curr_state.D~feeder, processor, 1
instance = comp, \CTRL|curr_state.D , CTRL|curr_state.D, processor, 1
instance = comp, \CTRL|curr_state.E , CTRL|curr_state.E, processor, 1
instance = comp, \CTRL|curr_state.F , CTRL|curr_state.F, processor, 1
instance = comp, \CTRL|curr_state.G , CTRL|curr_state.G, processor, 1
instance = comp, \CTRL|curr_state.H , CTRL|curr_state.H, processor, 1
instance = comp, \CTRL|curr_state.I , CTRL|curr_state.I, processor, 1
instance = comp, \CTRL|curr_state.J~feeder , CTRL|curr_state.J~feeder, processor, 1
instance = comp, \CTRL|curr_state.J , CTRL|curr_state.J, processor, 1
instance = comp, \CTRL|curr_state.K , CTRL|curr_state.K, processor, 1
instance = comp, \CTRL|curr_state.L , CTRL|curr_state.L, processor, 1
instance = comp, \comb~1 , comb~1, processor, 1
instance = comp, \ClrA_LdB~input , ClrA_LdB~input, processor, 1
instance = comp, \button_sync[1]|q~0 , button_sync[1]|q~0, processor, 1
instance = comp, \button_sync[1]|q , button_sync[1]|q, processor, 1
instance = comp, \Sw[2]~input , Sw[2]~input, processor, 1
instance = comp, \Sw[4]~input , Sw[4]~input, processor, 1
instance = comp, \Sw[5]~input , Sw[5]~input, processor, 1
instance = comp, \Sw[6]~input , Sw[6]~input, processor, 1
instance = comp, \REGB|Dout[3]~0 , REGB|Dout[3]~0, processor, 1
instance = comp, \Sw[0]~input , Sw[0]~input, processor, 1
instance = comp, \S0|fa0|c_out~0 , S0|fa0|c_out~0, processor, 1
instance = comp, \S0|fa0|c_out~1 , S0|fa0|c_out~1, processor, 1
instance = comp, \Sw[1]~input , Sw[1]~input, processor, 1
instance = comp, \S0|S2[1] , S0|S2[1], processor, 1
instance = comp, \S0|fa1|c_out~0 , S0|fa1|c_out~0, processor, 1
instance = comp, \CTRL|Sub~0 , CTRL|Sub~0, processor, 1
instance = comp, \S0|fa2|c_out~0 , S0|fa2|c_out~0, processor, 1
instance = comp, \Sw[3]~input , Sw[3]~input, processor, 1
instance = comp, \S0|fa3|s , S0|fa3|s, processor, 1
instance = comp, \REGA|Dout~9 , REGA|Dout~9, processor, 1
instance = comp, \CTRL|WideOr17~1 , CTRL|WideOr17~1, processor, 1
instance = comp, \CTRL|WideOr17~0 , CTRL|WideOr17~0, processor, 1
instance = comp, \REGA|Dout[0]~1 , REGA|Dout[0]~1, processor, 1
instance = comp, \REGA|Dout[3] , REGA|Dout[3], processor, 1
instance = comp, \S0|fa2|s , S0|fa2|s, processor, 1
instance = comp, \REGA|Dout~8 , REGA|Dout~8, processor, 1
instance = comp, \REGA|Dout[2] , REGA|Dout[2], processor, 1
instance = comp, \S0|fa1|s , S0|fa1|s, processor, 1
instance = comp, \REGA|Dout~7 , REGA|Dout~7, processor, 1
instance = comp, \REGA|Dout[1] , REGA|Dout[1], processor, 1
instance = comp, \S0|fa0|s~0 , S0|fa0|s~0, processor, 1
instance = comp, \REGA|Dout~6 , REGA|Dout~6, processor, 1
instance = comp, \REGA|Dout[0] , REGA|Dout[0], processor, 1
instance = comp, \Sw[7]~input , Sw[7]~input, processor, 1
instance = comp, \REGB|Dout~5 , REGB|Dout~5, processor, 1
instance = comp, \REGB|Dout[3]~2 , REGB|Dout[3]~2, processor, 1
instance = comp, \REGB|Dout[7] , REGB|Dout[7], processor, 1
instance = comp, \REGB|Dout~4 , REGB|Dout~4, processor, 1
instance = comp, \REGB|Dout[6] , REGB|Dout[6], processor, 1
instance = comp, \REGB|Dout~3 , REGB|Dout~3, processor, 1
instance = comp, \REGB|Dout[5] , REGB|Dout[5], processor, 1
instance = comp, \REGB|Dout~1 , REGB|Dout~1, processor, 1
instance = comp, \REGB|Dout[4] , REGB|Dout[4], processor, 1
instance = comp, \REGB|Dout~9 , REGB|Dout~9, processor, 1
instance = comp, \REGB|Dout[3] , REGB|Dout[3], processor, 1
instance = comp, \REGB|Dout~8 , REGB|Dout~8, processor, 1
instance = comp, \REGB|Dout[2] , REGB|Dout[2], processor, 1
instance = comp, \REGB|Dout~7 , REGB|Dout~7, processor, 1
instance = comp, \REGB|Dout[1] , REGB|Dout[1], processor, 1
instance = comp, \REGB|Dout~6 , REGB|Dout~6, processor, 1
instance = comp, \REGB|Dout[0] , REGB|Dout[0], processor, 1
instance = comp, \comb~0 , comb~0, processor, 1
instance = comp, \comb~2 , comb~2, processor, 1
instance = comp, \S0|fa8|s~0 , S0|fa8|s~0, processor, 1
instance = comp, \S0|fa3|c_out~0 , S0|fa3|c_out~0, processor, 1
instance = comp, \S0|fa4|c_out~0 , S0|fa4|c_out~0, processor, 1
instance = comp, \S0|fa5|c_out~0 , S0|fa5|c_out~0, processor, 1
instance = comp, \S0|fa6|c_out~0 , S0|fa6|c_out~0, processor, 1
instance = comp, \S0|fa7|c_out~0 , S0|fa7|c_out~0, processor, 1
instance = comp, \FF0|Q~0 , FF0|Q~0, processor, 1
instance = comp, \comb~3 , comb~3, processor, 1
instance = comp, \FF0|Q , FF0|Q, processor, 1
instance = comp, \REGA|Dout~4 , REGA|Dout~4, processor, 1
instance = comp, \REGA|Dout~5 , REGA|Dout~5, processor, 1
instance = comp, \REGA|Dout[7] , REGA|Dout[7], processor, 1
instance = comp, \S0|fa6|s , S0|fa6|s, processor, 1
instance = comp, \REGA|Dout~3 , REGA|Dout~3, processor, 1
instance = comp, \REGA|Dout[6] , REGA|Dout[6], processor, 1
instance = comp, \S0|fa5|s , S0|fa5|s, processor, 1
instance = comp, \REGA|Dout~2 , REGA|Dout~2, processor, 1
instance = comp, \REGA|Dout[5] , REGA|Dout[5], processor, 1
instance = comp, \S0|fa4|s , S0|fa4|s, processor, 1
instance = comp, \REGA|Dout~0 , REGA|Dout~0, processor, 1
instance = comp, \REGA|Dout[4] , REGA|Dout[4], processor, 1
instance = comp, \HexAU|WideOr6~0 , HexAU|WideOr6~0, processor, 1
instance = comp, \HexAU|WideOr5~0 , HexAU|WideOr5~0, processor, 1
instance = comp, \HexAU|WideOr4~0 , HexAU|WideOr4~0, processor, 1
instance = comp, \HexAU|WideOr3~0 , HexAU|WideOr3~0, processor, 1
instance = comp, \HexAU|WideOr2~0 , HexAU|WideOr2~0, processor, 1
instance = comp, \HexAU|WideOr1~0 , HexAU|WideOr1~0, processor, 1
instance = comp, \HexAU|WideOr0~0 , HexAU|WideOr0~0, processor, 1
instance = comp, \HexAL|WideOr6~0 , HexAL|WideOr6~0, processor, 1
instance = comp, \HexAL|WideOr5~0 , HexAL|WideOr5~0, processor, 1
instance = comp, \HexAL|WideOr4~0 , HexAL|WideOr4~0, processor, 1
instance = comp, \HexAL|WideOr3~0 , HexAL|WideOr3~0, processor, 1
instance = comp, \HexAL|WideOr2~0 , HexAL|WideOr2~0, processor, 1
instance = comp, \HexAL|WideOr1~0 , HexAL|WideOr1~0, processor, 1
instance = comp, \HexAL|WideOr0~0 , HexAL|WideOr0~0, processor, 1
instance = comp, \HexBU|WideOr6~0 , HexBU|WideOr6~0, processor, 1
instance = comp, \HexBU|WideOr5~0 , HexBU|WideOr5~0, processor, 1
instance = comp, \HexBU|WideOr4~0 , HexBU|WideOr4~0, processor, 1
instance = comp, \HexBU|WideOr3~0 , HexBU|WideOr3~0, processor, 1
instance = comp, \HexBU|WideOr2~0 , HexBU|WideOr2~0, processor, 1
instance = comp, \HexBU|WideOr1~0 , HexBU|WideOr1~0, processor, 1
instance = comp, \HexBU|WideOr0~0 , HexBU|WideOr0~0, processor, 1
instance = comp, \HexBL|WideOr6~0 , HexBL|WideOr6~0, processor, 1
instance = comp, \HexBL|WideOr5~0 , HexBL|WideOr5~0, processor, 1
instance = comp, \HexBL|WideOr4~0 , HexBL|WideOr4~0, processor, 1
instance = comp, \HexBL|WideOr3~0 , HexBL|WideOr3~0, processor, 1
instance = comp, \HexBL|WideOr2~0 , HexBL|WideOr2~0, processor, 1
instance = comp, \HexBL|WideOr1~0 , HexBL|WideOr1~0, processor, 1
instance = comp, \HexBL|WideOr0~0 , HexBL|WideOr0~0, processor, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
